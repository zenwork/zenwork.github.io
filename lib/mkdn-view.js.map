{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/lib/template.ts","webpack:///../src/lib/directive.ts","webpack:///../src/lib/render.ts","webpack:///./src/shared/events.js","webpack:///../src/lib/template-instance.ts","webpack:///./src/shared/child-element.js","webpack:///./src/shared/util.js","webpack:///./src/shared/cooperation-events.js","webpack:///./src/shared/base-element.js","webpack:///./src/shared/index.js","webpack:///./src/shared/story.js","webpack:///./src/shared/store.js","webpack:///../src/lib/part.ts","webpack:///./src/shared/section.js","webpack:///../src/lib/default-template-processor.ts","webpack:///src/lit-html.ts","webpack:///./src/shared/parent-element.js","webpack:///../src/lib/modify-template.ts","webpack:///../src/lib/shady-render.ts","webpack:///../src/lib/updating-element.ts","webpack:///../src/lib/decorators.ts","webpack:///src/lit-element.ts","webpack:///../src/lib/dom.ts","webpack:///../src/lib/parts.ts","webpack:///../src/lib/template-result.ts","webpack:///./src/components/mkdn-static-store.js","webpack:///./src/components/mkdn-store.js","webpack:///./src/components/mkdn-view.js","webpack:///../src/lib/template-factory.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","marker","concat","String","Math","random","slice","nodeMarker","markerRegex","RegExp","rewritesStyleAttribute","el","document","createElement","setAttribute","getAttribute","Template","result","element","_this","this","_classCallCheck","parts","index","partIndex","nodesToRemove","_prepareTemplate","template","previousNode","currentNode","content","walker","createTreeWalker","nextNode","node","nodeType","hasAttributes","attributes","count","length","indexOf","stringForPart","strings","lastAttributeNameRegex","exec","attributeLookupName","test","toLowerCase","split","push","type","removeAttribute","tagName","nodeValue","parent","parentNode","_strings","lastIndex","_i","insertBefore","createMarker","createTextNode","_parent","previousSibling","Node","TEXT_NODE","nextSibling","_i2","_i3","removeChild","isTemplatePartActive","part","createComment","__webpack_exports__","directive","isDirective","directives","WeakMap","f","set","has","render","_dom_js__WEBPACK_IMPORTED_MODULE_0__","_parts_js__WEBPACK_IMPORTED_MODULE_1__","_template_factory_js__WEBPACK_IMPORTED_MODULE_2__","container","options","undefined","firstChild","assign","templateFactory","appendInto","setValue","commit","observeContentChange","ofComponent","handleInputFn","root","observer","MutationObserver","mutations","forEach","mutation","target","nodeName","toUpperCase","input","innerHTML","e","observe","childList","subtree","dispatchIndexUpdate","listenForIndexUpdate","dispatchSelection","listenForHashUrl","listenForSelection","dispatchStory","listenForStory","indexUpdate","store","dispatchEvent","CustomEvent","detail","onEventFn","addEventListener","storyDef","event","list","actionFn","TemplateInstance","processor","_parts","_createClass","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_part","fragment","cloneNode","importNode","nodeIndex","_prepareInstance","_template_js__WEBPACK_IMPORTED_MODULE_1__","_part2","handleTextExpression","insertAfterNode","_this$_parts","apply","_toConsumableArray","handleAttributeExpressions","adoptNode","customElements","upgrade","ChildElement","_BaseElement","_possibleConstructorReturn","_getPrototypeOf","ancestor","siblings","_inherits","BaseElement","sibling","Events","createReady","findParent","createLeaving","ancestorSelector","that","byId","getElementById","closest","beforeJoining","JOIN_EVENT","source","JOINER_ACCEPTED","initAdopted","JOINER_CATCHUP","hashcode","console","debug","onSiblingReady","PARENT_READY","join","JOINER_READY","includes","JOINER_LEAVING","findIndex","onSiblingLeaving","initOrphaned","createRequest","clone","obj","JSON","parse","stringify","JOINER_REQUEST","joiner","acceptor","id","window","dev","_LitElement","Id","Class","constructor","TypeError","LitElement","attachShadow","define","Error","message","Index","sections","stories","defaultStory","keys","filter","url","story","Story","title","shortTitle","hash","redirect","output","map","_typeof","StoreOperations","store_classCallCheck","store_createClass","rawData","section","Section","validate","standardizeAll","default","k","noChange","memberOf","defaultTemplateProcessor","DefaultTemplateProcessor","prefix","eventContext","lit_html_html","template_result","template_instance","dom","template_factory","_len","arguments","Array","_key","ParentElement","joiners","initParent","_this2","requestToJoin","joinerReady","joinerLeaving","createAcceptorReady","createAccept","_this3","alreadyJoined","createCatchup","walkerNodeFilter","NodeFilter","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","removeNodesFromTemplate","modify_template_nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","countNodes","DOCUMENT_FRAGMENT_NODE","lib_template","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","warn","TEMPLATE_TYPES","shadyRenderSet","Set","shady_render_prepareTemplateStyles","renderedDOM","add","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","shady_render_removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","appendChild","insertNodeIntoTemplate","prepareTemplateStyles","nativeShadow","_style","querySelector","removes","fromBooleanAttribute","toBooleanAttribute","notEqual","old","defaultPropertyDeclaration","attribute","reflect","hasChanged","microtaskPromise","Promise","resolve","UpdatingElement","_HTMLElement","_updateState","_instanceProperties","_updatePromise","_changedProperties","Map","_reflectingProperties","initialize","_wrapNativeSuper","HTMLElement","renderRoot","createRenderRoot","_saveInstanceProperties","_classProperties","_slicedToArray","_step2$value","v","styleElement","requestUpdate","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","attr","_attributeNameForProperty","propName","_attributeToPropertyMap","_propertyValueFromAttribute","oldValue","_requestPropertyUpdate","_invalidate","_valueHasChanged","updateComplete","_invalidate2","_asyncToGenerator","regeneratorRuntime","mark","_callee","resolver","previousValidatePromise","wrap","_context","prev","_hasRequestedUpdate","_validate","abrupt","stop","_applyInstanceProperties","shouldUpdate","changedProperties","update","_markUpdated","firstUpdated","updated","size","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_step3$value","_propertyToAttribute","superProperties","getPrototypeOf","configurable","_finalized","superCtor","_finalize","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","createProperty","fromAttribute","Boolean","toAttribute","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_step5$value","_query","selector","queryFn","proto","lit_element_LitElement","_UpdatingElement","lit_element_classCallCheck","lit_element_possibleConstructorReturn","lit_element_getPrototypeOf","lit_element_inherits","lit_element_createClass","_get","templateResult","lit_html","localName","hasRendered","lib_render","cacheKey","templateCache","getTemplateElement","shady_render_shadyTemplateFactory","ShadowRoot","instance","host","isCEPolyfill","reparentNodes","removeNodes","polyfillWrapFlushCallback","start","end","before","startNode","endNode","isPrimitive","AttributeCommitter","dirty","_createPart","AttributePart","text","isArray","_getValue","comitter","committer","_part_js__WEBPACK_IMPORTED_MODULE_2__","_directive_js__WEBPACK_IMPORTED_MODULE_0__","NodePart","_pendingValue","_template_js__WEBPACK_IMPORTED_MODULE_5__","ref","_insert","_commitText","_template_result_js__WEBPACK_IMPORTED_MODULE_4__","_commitTemplateResult","_commitNode","_commitIterable","then","_commitPromise","clear","_template_instance_js__WEBPACK_IMPORTED_MODULE_3__","_clone","itemPart","itemParts","item","appendIntoPart","insertAfterPart","_dom_js__WEBPACK_IMPORTED_MODULE_1__","BooleanAttributePart","PropertyCommitter","_AttributeCommitter","single","PropertyPart","_AttributePart","eventOptionsSupported","capture","removeEventListener","_e","EventPart","eventName","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","_options","getOptions","handleEvent","TemplateResult","html","isTextBinding","close","lastIndexOf","replace","match","p1","p2","p3","getHTML","SVGTemplateResult","_TemplateResult","svgElement","MkdnStaticStore","_ChildElement","disconnect","shadowRoot","updateStore","findStory","transformIndex","trim","_templateObject","MkdnStore","mkdn_store_classCallCheck","mkdn_store_possibleConstructorReturn","mkdn_store_getPrototypeOf","mkdn_store_inherits","mkdn_store_createClass","updateIndex","dispatchIndexEvent","fetch","src","rawJson","ready","addToStore","getStoryKeys","getStory","handleResponseFn","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","mkdn_store_templateObject","def","newDef","MkdnView","_ParentElement","mkdn_view_classCallCheck","mkdn_view_possibleConstructorReturn","mkdn_view_getPrototypeOf","mkdn_view_inherits","mkdn_view_createClass","mkdn_view_get","_objectSpread","mkdn_view_templateObject","templateCaches","_template_js__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"mkdn-view.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 81);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, not attribute positions,\n * in template.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\nexport const rewritesStyleAttribute = (() => {\n  const el = document.createElement('div');\n  el.setAttribute('style', '{{bad value}}');\n  return el.getAttribute('style') !== '{{bad value}}';\n})();\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  parts: TemplatePart[] = [];\n  element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n    let index = -1;\n    let partIndex = 0;\n    const nodesToRemove: Node[] = [];\n    const _prepareTemplate = (template: HTMLTemplateElement) => {\n      const content = template.content;\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          content,\n          133 /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |\n                 NodeFilter.SHOW_TEXT */\n          ,\n          null as any,\n          false);\n      // The actual previous node, accounting for removals: if a node is removed\n      // it will never be the previousNode.\n      let previousNode: Node|undefined;\n      // Used to set previousNode at the top of the loop.\n      let currentNode: Node|undefined;\n      while (walker.nextNode()) {\n        index++;\n        previousNode = currentNode;\n        const node = currentNode = walker.currentNode as Element;\n        if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n          if (node.hasAttributes()) {\n            const attributes = node.attributes;\n            // Per\n            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n            // attributes are not guaranteed to be returned in document order.\n            // In particular, Edge/IE can return them out of order, so we cannot\n            // assume a correspondance between part index and attribute index.\n            let count = 0;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].value.indexOf(marker) >= 0) {\n                count++;\n              }\n            }\n            while (count-- > 0) {\n              // Get the template literal section leading up to the first\n              // expression in this attribute\n              const stringForPart = result.strings[partIndex];\n              // Find the attribute name\n              const name = lastAttributeNameRegex.exec(stringForPart)![2];\n              // Find the corresponding attribute\n              // If the attribute name contains special characters, lower-case\n              // it so that on XML nodes with case-sensitive getAttribute() we\n              // can still find the attribute, which will have been lower-cased\n              // by the parser.\n              //\n              // If the attribute name doesn't contain special character, it's\n              // important to _not_ lower-case it, in case the name is\n              // case-sensitive, like with XML attributes like \"viewBox\".\n              const attributeLookupName =\n                  (rewritesStyleAttribute && name === 'style') ?\n                  'style$' :\n                  /^[a-zA-Z-]*$/.test(name) ? name : name.toLowerCase();\n              const attributeValue = node.getAttribute(attributeLookupName)!;\n              const strings = attributeValue.split(markerRegex);\n              this.parts.push({type: 'attribute', index, name, strings});\n              node.removeAttribute(attributeLookupName);\n              partIndex += strings.length - 1;\n            }\n          }\n          if (node.tagName === 'TEMPLATE') {\n            _prepareTemplate(node as HTMLTemplateElement);\n          }\n        } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n          const nodeValue = node.nodeValue!;\n          if (nodeValue.indexOf(marker) < 0) {\n            continue;\n          }\n          const parent = node.parentNode!;\n          const strings = nodeValue.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // We have a part for each match found\n          partIndex += lastIndex;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            parent.insertBefore(\n                (strings[i] === '') ? createMarker() :\n                                      document.createTextNode(strings[i]),\n                node);\n            this.parts.push({type: 'node', index: index++});\n          }\n          parent.insertBefore(\n              strings[lastIndex] === '' ?\n                  createMarker() :\n                  document.createTextNode(strings[lastIndex]),\n              node);\n          nodesToRemove.push(node);\n        } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n          if (node.nodeValue === marker) {\n            const parent = node.parentNode!;\n            // Add a new marker node to be the startNode of the Part if any of\n            // the following are true:\n            //  * We don't have a previousSibling\n            //  * previousSibling is being removed (thus it's not the\n            //    `previousNode`)\n            //  * previousSibling is not a Text node\n            //\n            // TODO(justinfagnani): We should be able to use the previousNode\n            // here as the marker node and reduce the number of extra nodes we\n            // add to a template. See\n            // https://github.com/PolymerLabs/lit-html/issues/147\n            const previousSibling = node.previousSibling;\n            if (previousSibling === null || previousSibling !== previousNode ||\n                previousSibling.nodeType !== Node.TEXT_NODE) {\n              parent.insertBefore(createMarker(), node);\n            } else {\n              index--;\n            }\n            this.parts.push({type: 'node', index: index++});\n            nodesToRemove.push(node);\n            // If we don't have a nextSibling add a marker node.\n            // We don't have to check if the next node is going to be removed,\n            // because that node will induce a new marker if so.\n            if (node.nextSibling === null) {\n              parent.insertBefore(createMarker(), node);\n            } else {\n              index--;\n            }\n            currentNode = previousNode;\n            partIndex++;\n          } else {\n            let i = -1;\n            while ((i = node.nodeValue!.indexOf(marker, i + 1)) !== -1) {\n              // Comment node has a binding marker inside, make an inactive part\n              // The binding won't work, but subsequent bindings will\n              // TODO (justinfagnani): consider whether it's even worth it to\n              // make bindings in comments work\n              this.parts.push({type: 'node', index: -1});\n            }\n          }\n        }\n      }\n    };\n    _prepareTemplate(element);\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  type: 'node',\n  index: number\n}|{type: 'attribute', index: number, name: string, strings: string[]};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<any, Boolean>();\n\nexport interface Directive<P = Part> {\n  (part: P): void;\n}\n\nexport const directive = <P = Part>(f: Directive<P>): Directive<P> => {\n  directives.set(f, true);\n  return f;\n};\n\nexport const isDirective = (o: any) =>\n    typeof o === 'function' && directives.has(o);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\nimport {TemplateResult} from './template-result.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * util function that creates and triggers the observation of the content of a\n * given node.\n *\n * @param ofComponent component's name\n * @param handleInputFn function to handle the mutation\n * @param root node on which to attach the observer\n * @return {MutationObserver}\n */\nexport function observeContentChange(ofComponent, handleInputFn, root) {\n  // Options for the observer (which mutations to observe)\n  const config = {attributes: false, childList: true, subtree: false};\n\n  const observer = new MutationObserver(function(mutations) {\n    mutations.forEach(function(mutation) {\n      if (mutation.type === 'childList' && mutation.target.nodeName ===\n          ofComponent.toUpperCase()) {\n        const input = mutation.target.innerHTML;\n        try {\n          if (input) {\n            handleInputFn(input, root);\n          }\n        } catch (e) {\n          throw e;\n        }\n      }\n    });\n  });\n\n  // Start observing the target node for configured mutations\n  observer.observe(root, config);\n  return observer;\n}\n\nexport function initFromAndObserveContent(ofComponent, handleInputFn, root) {\n  if (root.innerHTML) {\n    handleInputFn(root.innerHTML, root);\n  }\n\n  return observeContentChange(ofComponent, handleInputFn, root);\n}\n\nconst indexUpdate = 'mkdn-store-index-updated';\n\nexport function dispatchIndexUpdate(store, index) {\n  // console.log('>>>: index update');\n  store.dispatchEvent(new CustomEvent(indexUpdate, {detail: index}));\n}\n\nexport function listenForIndexUpdate(store, onEventFn) {\n  // console.log('<<<: index update');\n  store.addEventListener(indexUpdate, onEventFn);\n}\n\nexport function dispatchSelection(root, storyDef) {\n  const event = new CustomEvent('mkdn-list-selection', {detail: storyDef});\n  root.dispatchEvent(event);\n}\n\nexport function dispatchHashUrl(root, hash) {\n  const event = new CustomEvent('mkdn-nav-hash-url', {detail: hash});\n  root.dispatchEvent(event);\n}\n\nexport function listenForHashUrl(list, actionFn) {\n  // console.log('<<<: selection');\n  list.addEventListener('mkdn-nav-hash-url', actionFn);\n}\n\nexport function listenForSelection(list, actionFn) {\n  // console.log('<<<: selection');\n  list.addEventListener('mkdn-list-selection', actionFn);\n}\n\nexport function dispatchStory(root, storyDef) {\n  const event = new CustomEvent('mkdn-store-story', {detail: storyDef});\n  root.dispatchEvent(event);\n}\n\nexport function listenForStory(store, actionFn) {\n  // console.log('<<<: selection');\n  if (store) store.addEventListener('mkdn-store-story', actionFn);\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\n// import {TemplateFactory} from './template-factory.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  _parts: Array<Part|undefined> = [];\n  processor: TemplateProcessor;\n  options: RenderOptions;\n  template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: any[]) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // When using the Custom Elements polyfill, clone the node, rather than\n    // importing it, to keep the fragment in the template's document. This\n    // leaves the fragment inert so custom elements won't upgrade and\n    // potentially modify their contents by creating a polyfilled ShadowRoot\n    // while we traverse the tree.\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const parts = this.template.parts;\n    let partIndex = 0;\n    let nodeIndex = 0;\n    const _prepareInstance = (fragment: DocumentFragment) => {\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          fragment,\n          133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n          null as any,\n          false);\n      let node = walker.nextNode();\n      // Loop through all the nodes and parts of a template\n      while (partIndex < parts.length && node !== null) {\n        const part = parts[partIndex];\n        // Consecutive Parts may have the same node index, in the case of\n        // multiple bound attributes on an element. So each iteration we either\n        // increment the nodeIndex, if we aren't on a node with a part, or the\n        // partIndex if we are. By not incrementing the nodeIndex when we find a\n        // part, we allow for the next part to be associated with the current\n        // node if neccessasry.\n        if (!isTemplatePartActive(part)) {\n          this._parts.push(undefined);\n          partIndex++;\n        } else if (nodeIndex === part.index) {\n          if (part.type === 'node') {\n            const part = this.processor.handleTextExpression(this.options);\n            part.insertAfterNode(node);\n            this._parts.push(part);\n          } else {\n            this._parts.push(...this.processor.handleAttributeExpressions(\n                node as Element, part.name, part.strings, this.options));\n          }\n          partIndex++;\n        } else {\n          nodeIndex++;\n          if (node.nodeName === 'TEMPLATE') {\n            _prepareInstance((node as HTMLTemplateElement).content);\n          }\n          node = walker.nextNode();\n        }\n      }\n    };\n    _prepareInstance(fragment);\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","import {BaseElement} from './base-element';\nimport {\n  Events,\n  JOIN_EVENT,\n  JOINER_ACCEPTED,\n  JOINER_CATCHUP,\n  JOINER_LEAVING,\n  JOINER_READY,\n  PARENT_READY,\n}                    from './cooperation-events';\n\n/**\n * Class implementing the 'child' contract needed for structured\n * initialization of families of related elements.\n */\nexport class ChildElement extends BaseElement {\n  /**\n   * element name. It should be overriden by implementing class.\n   * @return {string} name\n   */\n  static get name() {\n    return 'md-child';\n  }\n\n  constructor() {\n    super();\n    this.ancestor = null;\n    this.siblings = [];\n  }\n\n  /**\n   * Called before requesting to join parent\n   */\n  beforeJoining() {}\n\n  /**\n   * Called when the element will run in alone without the support of a\n   * containing parent\n   */\n  initOrphaned() {}\n\n  /**\n   * Called when this element's request to join is accepted. Any initialization\n   * with the parent can be done then.\n   * @param {Element} parent\n   */\n  initAdopted(parent) {}\n\n  /**\n   * Called when a sibling elements have called ready(). It will only be\n   * called once per lide-cycle.\n   * @param {Element} sibling the ready element\n   */\n  onSiblingReady(sibling) {}\n\n  /**\n   * Called when a component that has joined is leaving. It will only be called once\n   * @param sibling the leaving element\n   */\n  onSiblingLeaving(sibling) {}\n\n  /**\n   * Must be called when the element is ready to collaborate. Other elements\n   * colaborating under the same parent\n   * will receive a ready event from this element only after ready() has been\n   * called.\n   */\n  ready() {\n    // if (!this.isReady) {\n      this.ancestor.dispatchEvent(Events.createReady(this));\n      // this.isReady = true;\n    // }\n  }\n\n  /**\n   * Custom Element standard call when element instance connected to DOM\n   */\n  connectedCallback() {\n    // console.debug(`${this.Class} is connected`);\n    this.findParent('md-parent');\n  }\n\n  /**\n   * Custom Element standard call when element instance disconnected from DOM\n   */\n  disconnectedCallback() {\n    this.ancestor.dispatchEvent(Events.createLeaving(this));\n  }\n\n  /**\n   * Initialize the component in standalone or cooperative mode.\n   * @param {String} ancestorSelector  a selector to find the ancestor that\n   * accepts joiners\n   * @param {Object} options  option flags. currently supports\n   * 'byId=false|true' to lookup ancestor by ID in whole\n   * document. otherwise searches closest ancestor.\n   * @return {string} 'cooperative' if attempted to register with parent;\n   * 'standalone' otherwise\n   */\n  findParent(ancestorSelector, options) {\n    const that = this;\n    // if no parent provided then standalone mode\n    if (!ancestorSelector) {\n      // console.debug(`${this.Class} initializing for standalone`);\n      this.initOrphaned();\n      return 'standalone';\n    }\n\n    // find parent\n    let ancestor;\n    if (options && options.byId) {\n      ancestor = this.ancestor = document.getElementById(ancestorSelector);\n    } else {\n      ancestor = this.ancestor = this.closest(ancestorSelector);\n    }\n\n    this.beforeJoining();\n\n    if (ancestor) {\n      this.addEventListener(JOIN_EVENT, localEventAction);\n      this.ancestor.addEventListener(JOIN_EVENT, sharedEventAction);\n      this.join();\n      return 'cooperative';\n    } else {\n      this.initOrphaned();\n      return 'standalone';\n    }\n\n    function localEventAction(event) {\n      const detail = event.detail;\n      const source = detail.source;\n      const type = detail.type;\n      switch (type) {\n        case JOINER_ACCEPTED:\n          that.initAdopted(source);\n          break;\n        case JOINER_CATCHUP:\n          if (source.hashcode() !== that.hashcode() && that.siblings.indexOf(source.hashcode()) < 0) {\n            console.debug(`${that.hashcode()} catching up with ${source.hashcode()}`);\n            that.siblings.push(source.hashcode());\n            that.onSiblingReady(source);\n          }\n          break;\n      }\n    }\n\n    function sharedEventAction(event) {\n      const detail = event.detail;\n      const source = detail.source;\n\n      if (notFromSelf()) {\n        const type = detail.type;\n        switch (type) {\n          case PARENT_READY:\n            // join because parent indicates it will accept requests\n            that.join();\n            break;\n          case JOINER_READY:\n            if (!that.siblings.includes(source.hashcode())) {\n              that.siblings.push(source.hashcode());\n              that.onSiblingReady(source);\n            }\n            break;\n          case JOINER_LEAVING:\n            if (that.siblings.indexOf(source.hashcode()) > -1) {\n              delete that.siblings[that.siblings.findIndex((i) => i === source.hashcode())];\n              that.onSiblingLeaving(source);\n            }\n            break;\n        }\n      }\n\n      function notFromSelf() {\n        return source.hashcode() ? source.hashcode() !== that.hashcode() : false;\n      }\n    }\n  }\n\n  /**\n   * dispatch a join request\n   */\n  join() {\n    if (this.ancestor) this.ancestor.dispatchEvent(Events.createRequest(this));\n  }\n\n}\n\n\n","export function clone(obj) {return JSON.parse(JSON.stringify(obj));}\n","export const JOIN_EVENT = 'md-join';\nexport const PARENT_READY = 'md-acceptor-ready';\nexport const JOINER_REQUEST = 'md-join-request';\nexport const JOINER_ACCEPTED = 'md-join-accepted';\nexport const JOINER_READY = 'md-join-ready';\nexport const JOINER_CATCHUP = 'md-join-catchup';\nexport const JOINER_LEAVING = 'md-join-leaving';\n\n/**\n * Events used for parent-child collaboration\n */\nexport class Events {\n\n\tstatic createRequest(joiner) {\n\t\tlet details = {detail:{type:JOINER_REQUEST, source:joiner}};\n\t\treturn new CustomEvent(JOIN_EVENT, details);\n\t}\n\n\tstatic createAccept(acceptor) {\n\t\tlet details = {detail:{type:JOINER_ACCEPTED, source:acceptor}};\n\t\treturn new CustomEvent(JOIN_EVENT, details);\n\t}\n\n\tstatic createReady(joiner) {\n\t\tlet details = {detail:{type:JOINER_READY, source:joiner}};\n\t\treturn new CustomEvent(JOIN_EVENT, details);\n\t}\n\n\tstatic createCatchup(joiner) {\n\t\tlet details = {detail:{type:JOINER_CATCHUP, source:joiner}};\n\t\treturn new CustomEvent(JOIN_EVENT, details);\n\t}\n\n\tstatic createAcceptorReady(joiner) {\n\t\tlet details = {detail:{type:PARENT_READY, source:joiner}};\n\t\treturn new CustomEvent(JOIN_EVENT, details);\n\t}\n\n\tstatic createLeaving(joiner) {\n\t\tlet details = {detail:{type:JOINER_LEAVING, source:joiner}};\n\t\treturn new CustomEvent(JOIN_EVENT, details);\n\t}\n}\n","import {LitElement} from '@polymer/lit-element/lit-element.js';\n\nlet id = 0;\nif (!window['mkdn']) window['mkdn'] = {dev: false};\n\nexport class BaseElement extends LitElement {\n\n  constructor() {\n    super();\n    this.Id = id++;\n    this.Class = new.target.name;\n    // console.debug(`constructing: ${this.Class}:${this.Id}`);\n    if (new.target === BaseElement) {\n      throw new TypeError('Cannot construct BaseElement instances directly');\n    }\n  }\n\n  hashcode() {\n    return this.Class + ':' + this.Id;\n  }\n\n  connectedCallback() {\n    // console.debug(`connected: ${this.Class}`);\n  }\n\n  static define(name) {\n    try {\n      const Class = this;\n      if (name) {\n        window.customElements.define(name, Class);\n      } else if (this.name) {\n        window.customElements.define(this.name, Class);\n      } else {\n        throw Error('either define [static this.name] or provide a valid name to the define(name) function');\n      }\n    } catch (e) {\n      console.debug(`swallowing custom component define() for [${name ? name : this.name}] error: ${e.message}`);\n    }\n  }\n\n  createRenderRoot() {\n    // should use a 'closed' shadow dom but must be open for testing!!! Need to figure this out\n    return this.attachShadow({mode: 'open'});\n  }\n\n}\n","/**\n * data class describing\n */\nexport class Index {\n\n  /**\n   *\n   * @param {Array} sections\n   * @param {Object} stories list of Story\n   * @param {String} defaultStory\n   */\n  constructor(sections, stories, defaultStory) {\n    this.sections = sections;\n    this.stories = stories;\n    this.defaultStory = defaultStory;\n  }\n\n  getDefault() {\n    const keys = Object.keys(this.stories);\n    const stories = this.stories;\n    const filter = keys.filter((key) => {\n      return stories[key].url === this.defaultStory;\n    });\n    return stories[filter[0]];\n  }\n\n  getStoryByUrl(url) {\n    const keys = Object.keys(this.stories);\n    return keys.filter((story) => story.url === url)[0];\n  }\n\n}\n","/**\n * Story Definition\n */\nexport class Story {\n\n  constructor(url, title, shortTitle, hash, redirect, content) {\n    this.url = url;\n    this.title = title;\n    this.shortTitle = shortTitle;\n    this.hash = hash;\n    this.redirect = redirect;\n    this.content = content;\n  }\n\n  static standardizeAll(stories) {\n    const output = {};\n    Object.keys(stories).map((key) => {\n      const story = stories[key];\n      let title;\n      if (typeof story === 'object') {\n        if (!story.title) {\n          throw Error('A story needs at minimum a title');\n        } else {\n          title = story.title;\n        }\n      }\n\n      if (typeof story === 'string') {\n        if (!story) {\n          throw Error('A story needs at minimum a title');\n        } else {\n          title = story;\n        }\n      }\n\n      output[key] = new Story(key,\n                              title,\n                              story.shortTitle ? story.shortTitle : null,\n                              story.hash ? story.hash : null,\n                              story.redirect ? story.redirect : null,\n                              story.content ? story.content : null);\n    });\n\n    return output;\n  }\n\n}\n","import {Index}   from './index';\nimport {Section} from './section';\nimport {Story}   from './story';\nimport {clone}   from './util';\n\nexport class StoreOperations {\n\n  static transformIndex(rawData) {\n    let input;\n    if (rawData) {\n      input = JSON.parse(rawData);\n    } else {\n      return {};\n    }\n\n    const output = {};\n\n    if (input.sections) {\n      input.sections.map((section) => Section.validate(section));\n    }\n    output.sections = clone(input.sections);\n\n    if (input.stories) {\n      output.stories = Story.standardizeAll(input.stories);\n    }\n\n    if (input.default) {\n      output.default = input.default;\n    } else {\n      output.default = Object.keys(input.stories)[0];\n    }\n\n    return new Index(output.sections, output.stories, output.default);\n  }\n\n  static findStory(stories, key) {\n    const keys = Object.keys(stories);\n    const found = keys.filter((k) => key === k);\n    return stories[found];\n  }\n\n}\n","/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  value: any;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: any): void;\n\n  /**\n   * Commits the current part value, cause it to actually be written to the DOM.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n","export class Section {\n\tconstructor(title, url, memberOf) {\n\t\tthis.title = title;\n\t\tthis.url = url;\n\t\tthis.memberOf = memberOf;\n\n\t}\n\n\tstatic validate(section) {\n\t\tif (!section.title) throw Error('[section.title] is required');\n\t\tif (!section.url) throw Error('[section.url] to index is required');\n\t\tif (section.memberOf) {\n\t\t\tif (!section.memberOf.title) throw Error('[section.memberOf.title] is required');\n\t\t\tif (!section.memberOf.url) throw Error('[section.memberOf.url] to index is required');\n\t\t}\n\t}\n\t\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): Part[] {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const comitter = new PropertyCommitter(element, name.slice(1), strings);\n      return comitter.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const comitter = new AttributeCommitter(element, name, strings);\n    return comitter.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport * from './lib/template-result.js';\nexport * from './lib/template.js';\nexport * from './lib/template-processor.js';\nexport * from './lib/default-template-processor.js';\nexport * from './lib/template-instance.js';\nexport * from './lib/part.js';\nexport * from './lib/parts.js';\nexport * from './lib/dom.js';\nexport * from './lib/directive.js';\nexport * from './lib/render.js';\nexport * from './lib/template-factory.js';\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: any[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: any[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","import { BaseElement } from './base-element';\nimport { Events, JOIN_EVENT, JOINER_LEAVING, JOINER_READY, JOINER_REQUEST } from './cooperation-events';\n\nexport class ParentElement extends BaseElement {\n\tstatic get name() {return 'md-parent';}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.joiners = {};\n\t}\n\n\tconnectedCallback() {\n\t\tthis.initParent();\n\t}\n\n\tinitParent() {\n\t\tthis.addEventListener(JOIN_EVENT, (event) => {\n\t\t\tlet source = event.detail.source;\n\t\t\tswitch (event.detail.type) {\n\t\t\t\tcase JOINER_REQUEST:\n\t\t\t\t\tthis.requestToJoin(source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase JOINER_READY:\n\t\t\t\t\tthis.joinerReady(source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase JOINER_LEAVING:\n\t\t\t\t\tthis.joinerLeaving(source);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tthis.dispatchEvent(Events.createAcceptorReady(this));\n\t}\n\n\trequestToJoin(source) {\n\t\tconsole.debug(`${this.Class} is accepting ${source.Class}:${source.Id} request to join`);\n\t\tsource.dispatchEvent(Events.createAccept(this));\n\t\tthis.joiners[source.hashcode()] = source;\n\t}\n\n\tjoinerReady(source) {\n\t\tObject.keys(this.joiners).forEach((key) => {\n\t\t\tlet alreadyJoined = this.joiners[key];\n\t\t\tsource.dispatchEvent(Events.createCatchup(alreadyJoined));\n\t\t});\n\t}\n\n\tjoinerLeaving(source) {\n\t\tdelete this.joiners[source.hashcode()];\n\n\t}\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter =\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null as any, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) ? 0 : 1;\n  const walker =\n      document.createTreeWalker(node, walkerNodeFilter, null as any, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null as any, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\ndeclare global {\n  interface Window {\n    ShadyCSS: any;\n  }\n  class ShadowRoot {}\n}\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected.` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = new Map<TemplateStringsArray, Template>();\n        templateCaches.set(cacheKey, templateCache);\n      }\n      let template = templateCache.get(result.strings);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.set(result.strings, template);\n      }\n      return template;\n    };\n\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (renderedDOM: DocumentFragment, template: Template, scopeName: string) => {\n      shadyRenderSet.add(scopeName);\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      // If there are no styles, there's no work to do.\n      if (styles.length === 0) {\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < styles.length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      insertNodeIntoTemplate(\n          template, condensedStyle, template.element.content.firstChild);\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n      if (window.ShadyCSS.nativeShadow) {\n        // When in native Shadow DOM, re-add styling to rendered content using\n        // the style ShadyCSS produced.\n        const style = template.element.content.querySelector('style')!;\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else {\n        // When not in native Shadow DOM, at this point ShadyCSS will have\n        // removed the style from the lit template and parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        template.element.content.insertBefore(\n            condensedStyle, template.element.content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options: ShadyRenderOptions) => {\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      litRender(result, container, {\n        templateFactory: shadyTemplateFactory(scopeName),\n        ...options,\n      } as RenderOptions);\n      // When rendering a TemplateResult, scope the template with ShadyCSS\n      if (container instanceof ShadowRoot && compatibleShadyCSSVersion &&\n          result instanceof TemplateResult) {\n        // Scope the element template one time only for this scope.\n        if (!shadyRenderSet.has(scopeName)) {\n          const part = parts.get(container)!;\n          const instance = part.value as TemplateInstance;\n          prepareTemplateStyles(\n              (container as ShadowRoot), instance.template, scopeName);\n        }\n        // Update styling if this is the initial render to this container.\n        if (!hasRendered) {\n          window.ShadyCSS.styleElement((container as ShadowRoot).host);\n        }\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface AttributeSerializer<T = any> {\n\n  /**\n   * Deserializing function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string): T;\n\n  /**\n   * Serializing function called to convert a property value to an attribute\n   * value.\n   */\n  toAttribute?(value: T): string|null;\n}\n\ntype AttributeType<T = any> = AttributeSerializer<T>|((value: string) => T);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<T = any> {\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  attribute?: boolean|string;\n\n  /**\n   * Indicates how to serialize and deserialize the attribute to/from a\n   * property. If this value is a function, it is used to deserialize the\n   * attribute value a the property value. If it's an object, it can have keys\n   * for `fromAttribute` and `toAttribute` where `fromAttribute` is the\n   * deserialize function and `toAttribute` is a serialize function used to set\n   * the property to an attribute. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute.\n   */\n  type?: AttributeType<T>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property serialized using the rules\n   * from the `type` property option.\n   */\n  reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: T, oldValue: T): boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\n// serializer/deserializers for boolean attribute\nconst fromBooleanAttribute = (value: string) => value !== null;\nconst toBooleanAttribute = (value: string) => value ? '' : null;\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute : true,\n  type : String,\n  reflect : false,\n  hasChanged : notEqual\n};\n\nconst microtaskPromise = new Promise((resolve) => resolve(true));\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING = 1 << 3;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute\n   * to `fooBar` property.\n   */\n  private static _attributeToPropertyMap: AttributeMap = new Map();\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  private static _finalized = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   */\n  private static _classProperties: PropertyDeclarationMap = new Map();\n\n  static properties: PropertyDeclarations = {};\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're _finalized.\n    this._finalize();\n    const attributes = [];\n    for (const [p, v] of this._classProperties) {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    }\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   */\n  static createProperty(name: PropertyKey,\n                        options:\n                            PropertyDeclaration = defaultPropertyDeclaration) {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty('_classProperties')) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties = Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach((v: any, k: PropertyKey) =>\n                                    this._classProperties.set(k, v));\n      }\n    }\n    this._classProperties.set(name, options);\n    // Allow user defined accessors by not replacing an existing own-property\n    // accessor.\n    if (this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      get() { return this[key]; },\n      set(value) {\n        const oldValue = this[name];\n        this[key] = value;\n        this._requestPropertyUpdate(name, oldValue, options);\n      },\n      configurable : true,\n      enumerable : true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   */\n  private static _finalize() {\n    if (this.hasOwnProperty('_finalized') && this._finalized) {\n      return;\n    }\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (typeof superCtor._finalize === 'function') {\n      superCtor._finalize();\n    }\n    this._finalized = true;\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    const props = this.properties;\n    // support symbols in properties (IE11 does not support this)\n    const propKeys = [\n      ...Object.getOwnPropertyNames(props),\n      ...(typeof Object.getOwnPropertySymbols === 'function')\n          ? Object.getOwnPropertySymbols(props)\n          : []\n    ];\n    for (const p of propKeys) {\n      // note, use of `any` is due to TypeSript lack of support for symbol in\n      // index types\n      this.createProperty(p, (props as any)[p]);\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   */\n  private static _attributeNameForProperty(name: PropertyKey,\n                                           options?: PropertyDeclaration) {\n    const attribute = options !== undefined && options.attribute;\n    return attribute === false\n               ? undefined\n               : (typeof attribute === 'string'\n                      ? attribute\n                      : (typeof name === 'string' ? name.toLowerCase()\n                                                  : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   */\n  private static _valueHasChanged(value: unknown, old: unknown,\n                                  hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's `type`\n   * or `type.fromAttribute` property option.\n   */\n  private static _propertyValueFromAttribute(value: string,\n                                             options?: PropertyDeclaration) {\n    const type = options && options.type;\n    if (type === undefined) {\n      return value;\n    }\n    // Note: special case `Boolean` so users can use it as a `type`.\n    const fromAttribute =\n        type === Boolean\n            ? fromBooleanAttribute\n            : (typeof type === 'function' ? type : type.fromAttribute);\n    return fromAttribute ? fromAttribute(value) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   */\n  private static _propertyValueToAttribute(value: unknown,\n                                           options?: PropertyDeclaration) {\n    if (options === undefined || options.reflect === undefined) {\n      return;\n    }\n    // Note: special case `Boolean` so users can use it as a `type`.\n    const toAttribute =\n        options.type === Boolean\n            ? toBooleanAttribute\n            : (options.type &&\n                   (options.type as AttributeSerializer).toAttribute ||\n               String);\n    return toAttribute(value);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  protected renderRoot?: Element|DocumentFragment;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this.renderRoot = this.createRenderRoot();\n    this._saveInstanceProperties();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    for (const [p] of (this.constructor as typeof UpdatingElement)\n             ._classProperties) {\n      if (this.hasOwnProperty(p)) {\n        const value = this[p as keyof this];\n        delete this[p as keyof this];\n        if (!this._instanceProperties) {\n          this._instanceProperties = new Map();\n        }\n        this._instanceProperties.set(p, value);\n      }\n    }\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    for (const [p, v] of this._instanceProperties!) {\n      (this as any)[p] = v;\n    }\n    this._instanceProperties = undefined;\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode : 'open'});\n  }\n\n  /**\n   * Uses ShadyCSS to keep element DOM updated.\n   */\n  connectedCallback() {\n    if ((this._updateState & STATE_HAS_UPDATED)) {\n      if (window.ShadyCSS !== undefined) {\n        window.ShadyCSS.styleElement(this);\n      }\n    } else {\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {}\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string, value: string) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attrValue = ctor._propertyValueToAttribute(value, options);\n    if (attrValue !== undefined) {\n      const attr = ctor._attributeNameForProperty(name, options);\n      if (attr !== undefined) {\n        // Track if the property is being reflected to avoid\n        // setting the property again via `attributeChangedCallback`. Note:\n        // 1. this takes advantage of the fact that the callback is synchronous.\n        // 2. will behave incorrectly if multiple attributes are in the reaction\n        // stack at time of calling. However, since we process attributes\n        // in `update` this should not be possible (or an extreme corner case\n        // that we'd like to discover).\n        // mark state reflecting\n        this._updateState = this._updateState | STATE_IS_REFLECTING;\n        if (attrValue === null) {\n          this.removeAttribute(attr);\n        } else {\n          this.setAttribute(attr, attrValue);\n        }\n        // mark state not reflecting\n        this._updateState = this._updateState & ~STATE_IS_REFLECTING;\n      }\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (!(this._updateState & STATE_IS_REFLECTING)) {\n      const ctor = (this.constructor as typeof UpdatingElement);\n      const propName = ctor._attributeToPropertyMap.get(name);\n      if (propName !== undefined) {\n        const options = ctor._classProperties.get(propName);\n        this[propName as keyof this] =\n            ctor._propertyValueFromAttribute(value, options);\n      }\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: any) {\n    if (name !== undefined) {\n      const options = (this.constructor as typeof UpdatingElement)\n                          ._classProperties.get(name) ||\n                      defaultPropertyDeclaration;\n      return this._requestPropertyUpdate(name, oldValue, options);\n    }\n    return this._invalidate();\n  }\n\n  /**\n   * Requests an update for a specific property and records change information.\n   * @param name {PropertyKey} name of requesting property\n   * @param oldValue {any} old value of requesting property\n   * @param options {PropertyDeclaration}\n   */\n  private _requestPropertyUpdate(name: PropertyKey, oldValue: any,\n                                 options: PropertyDeclaration) {\n    if (!(this.constructor as typeof UpdatingElement)\n             ._valueHasChanged(this[name as keyof this], oldValue,\n                               options.hasChanged)) {\n      return this.updateComplete;\n    }\n    // track old value when changing.\n    if (!this._changedProperties.has(name)) {\n      this._changedProperties.set(name, oldValue);\n    }\n    // add to reflecting properties set\n    if (options.reflect === true) {\n      if (this._reflectingProperties === undefined) {\n        this._reflectingProperties = new Map();\n      }\n      this._reflectingProperties.set(name, options);\n    }\n    return this._invalidate();\n  }\n\n  /**\n   * Invalidates the element causing it to asynchronously update regardless\n   * of whether or not any property changes are pending. This method is\n   * automatically called when any registered property changes.\n   */\n  private async _invalidate() {\n    if (!this._hasRequestedUpdate) {\n      // mark state updating...\n      this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n      let resolver: any;\n      const previousValidatePromise = this._updatePromise;\n      this._updatePromise = new Promise((r) => resolver = r);\n      await previousValidatePromise;\n      this._validate();\n      resolver!(!this._hasRequestedUpdate);\n    }\n    return this.updateComplete;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  /**\n   * Validates the element by updating it.\n   */\n  private _validate() {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    if (this.shouldUpdate(this._changedProperties)) {\n      const changedProperties = this._changedProperties;\n      this.update(changedProperties);\n      this._markUpdated();\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    } else {\n      this._markUpdated();\n    }\n  }\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. This getter can be implemented to\n   * await additional state. For example, it is sometimes useful to await a\n   * rendered element before fulfilling this Promise. To do this, first await\n   * `super.updateComplete` then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() { return this._updatePromise; }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated DOM in the element's\n   * `renderRoot`. Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      for (const [k, v] of this._reflectingProperties) {\n        this._propertyToAttribute(k, this[k as keyof this], v);\n      }\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n","\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: any[]): T\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n *\n * In TypeScript, the `tagName` passed to `customElement` must be a key of the\n * `HTMLElementTagNameMap` interface. To add your element to the interface,\n * declare the interface in this module:\n *\n *     @customElement('my-element')\n *     export class MyElement extends LitElement {}\n *\n *     declare global {\n *       interface HTMLElementTagNameMap {\n *         'my-element': MyElement;\n *       }\n *     }\n *\n */\nexport const customElement = (tagName: keyof HTMLElementTagNameMap) =>\n    (clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason. `Constructor<HTMLElement>`\n      // is helpful to make sure the decorator is applied to elements however.\n      return clazz as any;\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n */\nexport const property = (options?: PropertyDeclaration) => (proto: Object,\n                                                            name: string) => {\n  (proto.constructor as typeof UpdatingElement).createProperty(name, options);\n};\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n */\nexport const query = _query((target: NodeSelector, selector: string) =>\n                                target.querySelector(selector));\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n */\nexport const queryAll = _query((target: NodeSelector, selector: string) =>\n                                   target.querySelectorAll(selector));\n\n/**\n * Base-implementation of `@query` and `@queryAll` decorators.\n *\n * @param queryFn exectute a `selector` (ie, querySelector or querySelectorAll)\n * against `target`.\n */\nfunction _query<T>(queryFn: (target: NodeSelector, selector: string) => T) {\n  return (selector: string) => (proto: any, propName: string) => {\n    Object.defineProperty(proto, propName, {\n      get(this: LitElement) { return queryFn(this.renderRoot!, selector); },\n      enumerable : true,\n      configurable : true,\n    });\n  };\n}\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: EventListenerOptions) =>\n    (proto: any, name: string) => {\n      // This comment is here to fix a disagreement between formatter and linter\n      Object.assign(proto[name], options);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg} from 'lit-html/lit-html';\n\nexport class LitElement extends UpdatingElement {\n\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   */\n  static render = render;\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as any;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(templateResult, this.renderRoot!,\n                  {scopeName : this.localName!, eventContext : this});\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   * @returns {TemplateResult} Must return a lit-html TemplateResult.\n   */\n  protected render() {}\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as any).polyfillWrapFlushCallback !== undefined;\n\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      let node = start;\n      while (node !== end) {\n        const n = node!.nextSibling;\n        container.insertBefore(node!, before as Node);\n        node = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes =\n    (container: Node, startNode: Node|null, endNode: Node|null = null):\n        void => {\n          let node = startNode;\n          while (node !== endNode) {\n            const n = node!.nextSibling;\n            container.removeChild(node!);\n            node = n;\n          }\n        };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\nexport const isPrimitive = (value: any) =>\n    (value === null ||\n     !(typeof value === 'object' || typeof value === 'function'));\n\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n  element: Element;\n  name: string;\n  strings: string[];\n  parts: AttributePart[];\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      this.parts[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): any {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (v != null &&\n            (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        } else {\n          text += typeof v === 'string' ? v : String(v);\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue());\n    }\n  }\n}\n\nexport class AttributePart implements Part {\n  committer: AttributeCommitter;\n  value: any = undefined;\n\n  constructor(comitter: AttributeCommitter) {\n    this.committer = comitter;\n  }\n\n  setValue(value: any): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\nexport class NodePart implements Part {\n  options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: any = undefined;\n  _pendingValue: any = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Inserts this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n   * its next sibling must be static, unchanging nodes such as those that appear\n   * in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part._insert(this.startNode = createMarker());\n    part._insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Appends this part after `ref`\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref._insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    const value = this._pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this._commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this._commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this._commitNode(value);\n    } else if (Array.isArray(value) || value[Symbol.iterator]) {\n      this._commitIterable(value);\n    } else if (value.then !== undefined) {\n      this._commitPromise(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this._insert(value);\n    this.value = value;\n  }\n\n  private _commitText(value: string): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === Node.TEXT_NODE) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      node.textContent = value;\n    } else {\n      this._commitNode(document.createTextNode(\n          typeof value === 'string' ? value : String(value)));\n    }\n    this.value = value;\n  }\n\n  private _commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value && this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this._commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private _commitIterable(value: any): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart!.endNode);\n    }\n  }\n\n  private _commitPromise(value: Promise<any>): void {\n    this.value = value;\n    value.then((v: any) => {\n      if (this.value === value) {\n        this.setValue(v);\n        this.commit();\n      }\n    });\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  element: Element;\n  name: string;\n  strings: string[];\n  value: any = undefined;\n  _pendingValue: any = undefined;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n    const value = !!this._pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n    }\n    this.value = value;\n    this._pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  single: boolean;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\ndeclare global {\n  interface EventListenerOptions {\n    capture?: boolean;\n    once?: boolean;\n    passive?: boolean;\n  }\n}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  window.addEventListener('test', options as any, options);\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\nexport class EventPart implements Part {\n  element: Element;\n  eventName: string;\n  eventContext?: EventTarget;\n  value: any = undefined;\n  _options?: {capture?: boolean, passive?: boolean, once?: boolean};\n  _pendingValue: any = undefined;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this._pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(this.eventName, this, this._options);\n    }\n    this._options = getOptions(newListener);\n    if (shouldAddListener) {\n      this.element.addEventListener(this.eventName, this, this._options);\n    }\n    this.value = newListener;\n    this._pendingValue = noChange;\n  }\n\n  handleEvent(event: Event) {\n    const listener = (typeof this.value === 'function') ?\n        this.value :\n        (typeof this.value.handleEvent === 'function') ?\n        this.value.handleEvent :\n        () => null;\n    listener.call(this.eventContext || this.element, event);\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: any) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {lastAttributeNameRegex, marker, nodeMarker, rewritesStyleAttribute} from './template.js';\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  strings: TemplateStringsArray;\n  values: any[];\n  type: string;\n  processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: any[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isTextBinding = true;\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      html += s;\n      const close = s.lastIndexOf('>');\n      // We're in a text position if the previous string closed its last tag, an\n      // attribute position if the string opened an unclosed tag, and unchanged\n      // if the string had no brackets at all:\n      //\n      // \"...>...\": text position. open === -1, close > -1\n      // \"...<...\": attribute position. open > -1\n      // \"...\": no change. open === -1, close === -1\n      isTextBinding =\n          (close > -1 || isTextBinding) && s.indexOf('<', close + 1) === -1;\n\n      if (!isTextBinding && rewritesStyleAttribute) {\n        html = html.replace(lastAttributeNameRegex, (match, p1, p2, p3) => {\n          return (p2 === 'style') ? `${p1}style$${p3}` : match;\n        });\n      }\n      html += isTextBinding ? nodeMarker : marker;\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","import {html}                                                                         from '@polymer/lit-element/lit-element.js';\nimport {ChildElement}                                                                 from '../shared/child-element';\nimport {dispatchIndexUpdate, dispatchStory, listenForSelection, observeContentChange} from '../shared/events';\nimport {StoreOperations}                                                              from '../shared/store';\nimport {clone}                                                                        from '../shared/util';\n\nexport class MkdnStaticStore extends ChildElement {\n\n  static get name() {\n return 'mkdn-static-store';\n}\n\n  static get properties() {\n    return {\n      store: {type: Object, attribute: false},\n    };\n  }\n\n  connectedCallback() {\n    const state = this.findParent('mkdn-view');\n    if (state === 'standalone') {\n      throw Error('mkdn-static-store can not work in standalone mode');\n    }\n  }\n\n  disconnectedCallback() {\n    this.observer.disconnect();\n  }\n\n  initAdopted(parent) {\n    this.store = [];\n    this.shadowRoot.store = this.store;\n    observeContentChange('MKDN-STATIC-STORE', this.updateStore, this);\n    dispatchIndexUpdate(this, this.index);\n    super.ready();\n  }\n\n  onSiblingReady(sibling) {\n    switch (sibling.Class) {\n      case 'mkdn-list':\n        const that = this;\n        listenForSelection(sibling, (event) => {\n          const key = event.detail.url;\n          const story = StoreOperations.findStory(that.store.stories, key);\n          dispatchStory(that, story);\n        });\n\n        if (this.innerHTML) {\n          this.updateStore(this.innerHTML, this);\n        }\n\n        break;\n    }\n  }\n\n  updateStore(input, root) {\n    root.store = StoreOperations.transformIndex(input.trim());\n    root.shadowRoot.store = root.store;\n    const event = new CustomEvent('mkdn-store-updated');\n    root.dispatchEvent(event);\n    dispatchIndexUpdate(root, clone(root.store));\n  }\n\n  render() {\n    return html``;\n  }\n\n}\n\nMkdnStaticStore.define();\n","import { html } from '@polymer/lit-element/lit-element.js';\nimport { ChildElement } from '../shared/child-element';\nimport { dispatchIndexUpdate, dispatchStory, listenForHashUrl, listenForSelection } from '../shared/events';\nimport { Index } from '../shared/index';\nimport { Section } from '../shared/section';\nimport { StoreOperations } from '../shared/store';\nimport { clone } from '../shared/util';\n\nexport class MkdnStore extends ChildElement {\n\n\tstatic get name() { return 'mkdn-store';}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tsrc:{type:String},\n\t\t\tstories:{type:String}\n\t\t};\n\t}\n\n\tconnectedCallback() {\n\t\tlet state = this.findParent('mkdn-view');\n\t\tif (state === 'standalone') {\n\t\t\tthrow Error('mkdn-static-store can not work in standalone mode');\n\t\t}\n\t}\n\n\tinitAdopted(parent) {\n\t\tthis.index = new Index(new Section(null, null), {}, null);\n\t\tthis.updateIndex(this.index, this);\n\t\tthis.dispatchIndexEvent(this);\n\t\tthis.fetch(this, this.src, (root, rawJson) => {\n\t\t\tlet index = StoreOperations.transformIndex(rawJson);\n\t\t\troot.updateIndex(index, root);\n\t\t\tthis.ready();\n\t\t\tthis.dispatchIndexEvent(root);\n\t\t});\n\t}\n\n\tonSiblingReady(sibling) {\n\n\t\tconst that = this;\n\n\t\tswitch (sibling.Class) {\n\t\t\tcase 'mkdn-list':\n\t\t\t\tlistenForSelection(sibling, (event) => {\n\t\t\t\t\t// console.log('event.detail:' + JSON.stringify(event.detail));\n\t\t\t\t\tthis.fetch(that,\n\t\t\t\t\t           that.stories + event.detail.url + '.md',\n\t\t\t\t\t           (root, story) => {root.addToStore(event.detail, story, root);});\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'mkdn-nav':\n\t\t\t\tlistenForHashUrl(sibling, (event) => {\n\n\t\t\t\t\tlet hash = event.detail;\n\t\t\t\t\tthat.getStoryKeys()\n\t\t\t\t\t\t.map((key) => {\n\t\t\t\t\t\t\tlet storyDef = that.getStory(key);\n\n\t\t\t\t\t\t\tif (storyDef.hash === hash || storyDef.url === hash) {\n\t\t\t\t\t\t\t\tlet url = that.stories + storyDef.url + '.md';\n\t\t\t\t\t\t\t\t// console.log('url:' + JSON.stringify(url));\n\t\t\t\t\t\t\t\tthis.fetch(that,\n\t\t\t\t\t\t\t\t           url,\n\t\t\t\t\t\t\t\t           (root, story) => {root.addToStore(storyDef, story, root);});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfetch(root, url, handleResponseFn) {\n\t\tconst xmlhttp = new XMLHttpRequest();\n\t\txmlhttp.onreadystatechange = () => {\n\n\t\t\tif (xmlhttp.readyState === 4 && xmlhttp.status === 200) {\n\t\t\t\thandleResponseFn(root, xmlhttp.responseText);\n\t\t\t}\n\t\t};\n\t\txmlhttp.open('GET', url, true);\n\t\txmlhttp.send();\n\t}\n\n\trender() {\n\t\treturn html``;\n\t}\n\n\tgetStoryKeys() {\n\t\treturn Object.keys(this.index.stories);\n\t}\n\n\tgetStory(key) {\n\t\treturn this.index.stories[key];\n\t}\n\n\taddToStore(def, story, root) {\n\t\tlet newDef = clone(def);\n\t\tnewDef.content = story;\n\t\troot.story = newDef;\n\t\t// console.log(JSON.stringify(root.story));\n\t\tdispatchStory(root, root.story);\n\t}\n\n\tupdateIndex(value, root) {\n\t\troot.shadowRoot.value = root.index = value;\n\t}\n\n\tdispatchIndexEvent(root) {\n\t\tif (Object.keys(root.index.stories).length > 0) {\n\t\t\tdispatchIndexUpdate(root, clone(root.index));\n\t\t}\n\t}\n}\n\nMkdnStore.define('mkdn-store');\n","import { html } from '@polymer/lit-element/lit-element.js';\nimport { ParentElement } from '../shared/parent-element';\nimport { MkdnStaticStore } from './mkdn-static-store';\nimport { MkdnStore } from './mkdn-store';\n\nMkdnStaticStore.define();\nMkdnStore.define();\n\nexport class MkdnView extends ParentElement {\n\n\tstatic get name() { return 'mkdn-view';}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tjoiners:{type:Object, attribute:false}\n\t\t};\n\t}\n\n\tjoinerReady(source) {\n\t\tsuper.joinerReady(source);\n\t\t//trigger re-render\n\t\tthis.joiners = {...this.joiners};\n\t}\n\n\trender() {\n\t\treturn html`<slot></slot>`;\n\t}\n\n}\n\nMkdnView.define();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = new Map<TemplateStringsArray, Template>();\n    templateCaches.set(result.type, templateCache);\n  }\n  let template = templateCache.get(result.strings);\n  if (template === undefined) {\n    template = new Template(result, result.getTemplateElement());\n    templateCache.set(result.strings, template);\n  }\n  return template;\n}\n\n// The first argument to JS template tags retain identity across multiple\n// calls to a tag for the same literal, so we can cache work done per literal\n// in a Map.\nexport const templateCaches =\n    new Map<string, Map<TemplateStringsArray, Template>>();\n"],"sourceRoot":""}